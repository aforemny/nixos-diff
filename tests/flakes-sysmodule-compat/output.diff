+boot.blacklistedKernelModules = [ ];
+boot.consoleLogLevel = 4;
+boot.extraModprobeConfig = ''
  
  '';
+boot.hardwareScan = true;
+boot.initrd.checkJournalingFS = true;
-boot.initrd.enable = false;
+boot.initrd.enable = true;
+boot.initrd.services.bcache.enable = false;
+boot.initrd.services.lvm.enable = false;
-boot.isContainer = true;
+boot.isContainer = false;
-boot.kernel.enable = false;
+boot.kernel.enable = true;
+boot.kernel.sysctl."kernel.printk" = 4;
+boot.kernelModules = [ "bridge" "macvlan" "tap" "tun" "loop" "atkbd" ];
+boot.kernelPackages.kernelAtLeast = «lambda versionAtLeast @ /nix/store/00000000000000000000000000000000-source/lib/strings.nix:1944:24»;
+boot.loader.efi.efiSysMountPoint = "/boot";
+boot.loader.grub.configurationName = "";
+boot.loader.grub.device = "nodev";
+boot.loader.grub.devices = [ "nodev" ];
+boot.loader.grub.efiInstallAsRemovable = false;
+boot.loader.grub.efiSupport = false;
-boot.loader.grub.enable = false;
+boot.loader.grub.enable = true;
+boot.loader.grub.mirroredBoots = [ { devices = [ "nodev" ]; efiBootloaderId = «thunk»; efiSysMountPoint = "/boot"; path = "/boot"; } ];
+boot.loader.supportsInitrdSecrets = true;
-boot.modprobeConfig.enable = false;
+boot.modprobeConfig.enable = true;
+boot.modprobeConfig.useUbuntuModuleBlacklist = true;
+boot.resumeDevice = "";
+boot.specialFileSystems."/run/keys".depends = [ ];
+boot.specialFileSystems."/sys".options.".0" = "nosuid";
+boot.specialFileSystems."/sys".options.".1" = "noexec";
+boot.specialFileSystems."/sys".options.".2" = "nodev";
+boot.specialFileSystems."/sys".enable = true;
+boot.specialFileSystems."/sys".device = "sysfs";
+boot.specialFileSystems."/sys".fsType = "sysfs";
+boot.specialFileSystems."/sys".mountPoint = "/sys";
+boot.vesa = false;
+console.colors = [ ];
-console.enable = false;
+console.enable = true;
+console.font = null;
+console.keyMap = "us";
+console.packages = [ ];
+console.useXkbConfig = false;
+documentation.nixos.checkRedirects = true;
-documentation.nixos.enable = false;
+documentation.nixos.enable = true;
+documentation.nixos.extraModuleSources = [ ];
+documentation.nixos.extraModules = [ /nix/store/00000000000000000000000000000000-source/nixos/modules/virtualisation/qemu-vm.nix /nix/store/00000000000000000000000000000000-source/nixos/modules/image/repart.nix ];
+documentation.nixos.includeAllModules = false;
+documentation.nixos.options.splitBuild = true;
+documentation.nixos.options.warningsAreErrors = true;
 environment.etc.fstab.text =
  @@ -6,7 +6,8 @@
    # <file system> <mount point>   <type>  <options>       <dump>  <pass>
    
    # Filesystems.
   +tmpfs / auto x-initrd.mount 0 0
    
    
    
    
-environment.etc.issue.source = «derivation /nix/store/00000000000000000000000000000000-issue.drv»;
+environment.etc.issue.enable = true;
+environment.etc.issue.target = "issue";
+environment.etc.issue.text = null;
+environment.etc.issue.mode = "symlink";
+environment.etc.issue.group = "+0";
+environment.etc.issue.gid = 0;
+environment.etc.issue.uid = 0;
+environment.etc.issue.user = "+0";
+environment.etc.kbd.source = "/nix/store/00000000000000000000000000000000-console-env/share";
+environment.etc.kbd.enable = true;
+environment.etc.kbd.target = "kbd";
+environment.etc.kbd.text = null;
+environment.etc.kbd.mode = "symlink";
+environment.etc.kbd.group = "+0";
+environment.etc.kbd.gid = 0;
+environment.etc.kbd.uid = 0;
+environment.etc.kbd.user = "+0";
-environment.etc."modprobe.d/debian.conf".source = «derivation /nix/store/00000000000000000000000000000000-kmod-debian-aliases.conf-30+20230601-2.drv»;
+environment.etc."modprobe.d/debian.conf".enable = true;
+environment.etc."modprobe.d/debian.conf".target = "modprobe.d/debian.conf";
+environment.etc."modprobe.d/debian.conf".text = null;
+environment.etc."modprobe.d/debian.conf".mode = "symlink";
+environment.etc."modprobe.d/debian.conf".group = "+0";
+environment.etc."modprobe.d/debian.conf".gid = 0;
+environment.etc."modprobe.d/debian.conf".uid = 0;
+environment.etc."modprobe.d/debian.conf".user = "+0";
-environment.etc."modprobe.d/firmware.conf".source = «derivation /nix/store/00000000000000000000000000000000-etc-modprobe.d-firmware.conf.drv»;
+environment.etc."modprobe.d/firmware.conf".enable = true;
+environment.etc."modprobe.d/firmware.conf".target = "modprobe.d/firmware.conf";
+environment.etc."modprobe.d/firmware.conf".text = "options firmware_class path=/nix/store/00000000000000000000000000000000-firmware/lib/firmware";
+environment.etc."modprobe.d/firmware.conf".mode = "symlink";
+environment.etc."modprobe.d/firmware.conf".group = "+0";
+environment.etc."modprobe.d/firmware.conf".gid = 0;
+environment.etc."modprobe.d/firmware.conf".uid = 0;
+environment.etc."modprobe.d/firmware.conf".user = "+0";
-environment.etc."modprobe.d/nixos.conf".source = «derivation /nix/store/00000000000000000000000000000000-etc-modprobe.d-nixos.conf.drv»;
+environment.etc."modprobe.d/nixos.conf".enable = true;
+environment.etc."modprobe.d/nixos.conf".target = "modprobe.d/nixos.conf";
+environment.etc."modprobe.d/nixos.conf".text = ''
  
  
  
  '';
+environment.etc."modprobe.d/nixos.conf".mode = "symlink";
+environment.etc."modprobe.d/nixos.conf".group = "+0";
+environment.etc."modprobe.d/nixos.conf".gid = 0;
+environment.etc."modprobe.d/nixos.conf".uid = 0;
+environment.etc."modprobe.d/nixos.conf".user = "+0";
+environment.etc."modprobe.d/systemd.conf".source = "/nix/store/00000000000000000000000000000000-systemd-257.5/lib/modprobe.d/systemd.conf";
+environment.etc."modprobe.d/systemd.conf".enable = true;
+environment.etc."modprobe.d/systemd.conf".target = "modprobe.d/systemd.conf";
+environment.etc."modprobe.d/systemd.conf".text = null;
+environment.etc."modprobe.d/systemd.conf".mode = "symlink";
+environment.etc."modprobe.d/systemd.conf".group = "+0";
+environment.etc."modprobe.d/systemd.conf".gid = 0;
+environment.etc."modprobe.d/systemd.conf".uid = 0;
+environment.etc."modprobe.d/systemd.conf".user = "+0";
+environment.etc."modprobe.d/ubuntu.conf".source = "/nix/store/00000000000000000000000000000000-kmod-blacklist-31+20240202-2ubuntu8/modprobe.conf";
+environment.etc."modprobe.d/ubuntu.conf".enable = true;
+environment.etc."modprobe.d/ubuntu.conf".target = "modprobe.d/ubuntu.conf";
+environment.etc."modprobe.d/ubuntu.conf".text = null;
+environment.etc."modprobe.d/ubuntu.conf".mode = "symlink";
+environment.etc."modprobe.d/ubuntu.conf".group = "+0";
+environment.etc."modprobe.d/ubuntu.conf".gid = 0;
+environment.etc."modprobe.d/ubuntu.conf".uid = 0;
+environment.etc."modprobe.d/ubuntu.conf".user = "+0";
-environment.etc."modules-load.d/nixos.conf".source = «derivation /nix/store/00000000000000000000000000000000-nixos.conf.drv»;
+environment.etc."modules-load.d/nixos.conf".enable = true;
+environment.etc."modules-load.d/nixos.conf".target = "modules-load.d/nixos.conf";
+environment.etc."modules-load.d/nixos.conf".text = null;
+environment.etc."modules-load.d/nixos.conf".mode = "symlink";
+environment.etc."modules-load.d/nixos.conf".group = "+0";
+environment.etc."modules-load.d/nixos.conf".gid = 0;
+environment.etc."modules-load.d/nixos.conf".uid = 0;
+environment.etc."modules-load.d/nixos.conf".user = "+0";
-environment.etc."pam.d/vlock".source = «derivation /nix/store/00000000000000000000000000000000-vlock.pam.drv»;
+environment.etc."pam.d/vlock".enable = true;
+environment.etc."pam.d/vlock".target = "pam.d/vlock";
+environment.etc."pam.d/vlock".text = null;
+environment.etc."pam.d/vlock".mode = "symlink";
+environment.etc."pam.d/vlock".group = "+0";
+environment.etc."pam.d/vlock".gid = 0;
+environment.etc."pam.d/vlock".uid = 0;
+environment.etc."pam.d/vlock".user = "+0";
 environment.etc."sysctl.d/60-nixos.conf".text =
  @@ -1,6 +1,7 @@
    kernel.kptr_restrict=1
    kernel.pid_max=4194304
    kernel.poweroff_cmd=/nix/store/00000000000000000000000000000000-systemd-257.5/sbin/poweroff
   +kernel.printk=4
    net.ipv4.conf.all.forwarding=0
    net.ipv4.ping_group_range=0 2147483647
    net.ipv6.conf.all.disable_ipv6=0
-environment.etc."systemd/timesyncd.conf".source = «derivation /nix/store/00000000000000000000000000000000-etc-systemd-timesyncd.conf.drv»;
+environment.etc."systemd/timesyncd.conf".enable = true;
+environment.etc."systemd/timesyncd.conf".target = "systemd/timesyncd.conf";
+environment.etc."systemd/timesyncd.conf".text = ''
  [Time]
  FallbackNTP=0.nixos.pool.ntp.org 1.nixos.pool.ntp.org 2.nixos.pool.ntp.org 3.nixos.pool.ntp.org
  '';
+environment.etc."systemd/timesyncd.conf".mode = "symlink";
+environment.etc."systemd/timesyncd.conf".group = "+0";
+environment.etc."systemd/timesyncd.conf".gid = 0;
+environment.etc."systemd/timesyncd.conf".uid = 0;
+environment.etc."systemd/timesyncd.conf".user = "+0";
-environment.etc."udev/hwdb.bin".source = «derivation /nix/store/00000000000000000000000000000000-hwdb.bin.drv»;
+environment.etc."udev/hwdb.bin".enable = true;
+environment.etc."udev/hwdb.bin".target = "udev/hwdb.bin";
+environment.etc."udev/hwdb.bin".text = null;
+environment.etc."udev/hwdb.bin".mode = "symlink";
+environment.etc."udev/hwdb.bin".group = "+0";
+environment.etc."udev/hwdb.bin".gid = 0;
+environment.etc."udev/hwdb.bin".uid = 0;
+environment.etc."udev/hwdb.bin".user = "+0";
-environment.etc."udev/rules.d".source = «derivation /nix/store/00000000000000000000000000000000-udev-rules.drv»;
+environment.etc."udev/rules.d".enable = true;
+environment.etc."udev/rules.d".target = "udev/rules.d";
+environment.etc."udev/rules.d".text = null;
+environment.etc."udev/rules.d".mode = "symlink";
+environment.etc."udev/rules.d".group = "+0";
+environment.etc."udev/rules.d".gid = 0;
+environment.etc."udev/rules.d".uid = 0;
+environment.etc."udev/rules.d".user = "+0";
-environment.etc."vconsole.conf".source = «derivation /nix/store/00000000000000000000000000000000-vconsole.conf.drv»;
+environment.etc."vconsole.conf".enable = true;
+environment.etc."vconsole.conf".target = "vconsole.conf";
+environment.etc."vconsole.conf".text = null;
+environment.etc."vconsole.conf".mode = "symlink";
+environment.etc."vconsole.conf".group = "+0";
+environment.etc."vconsole.conf".gid = 0;
+environment.etc."vconsole.conf".uid = 0;
+environment.etc."vconsole.conf".user = "+0";
-environment.variables.NIX_REMOTE = "daemon";
+fileSystems."/".options.".0" = "x-initrd.mount";
+fileSystems."/".enable = true;
+fileSystems."/".device = "tmpfs";
+fileSystems."/".overlay.lowerdir = null;
+fileSystems."/".label = null;
+fileSystems."/".fsType = "auto";
+fileSystems."/".mountPoint = "/";
+fileSystems."/".neededForBoot = false;
+fileSystems."/".stratis.poolUuid = null;
+fileSystems."/".encrypted.enable = false;
+fileSystems."/".autoFormat = false;
+fileSystems."/".formatOptions = null;
+fileSystems."/".autoResize = false;
+fileSystems."/".noCheck = false;
+hardware.block.defaultScheduler = null;
+hardware.block.defaultSchedulerRotational = null;
+hardware.cpu.intel.sgx.enableDcapCompat = true;
+hardware.digitalbitbox.enable = false;
+hardware.enableAllHardware = false;
+hardware.enableRedistributableFirmware = false;
+hardware.facetimehd.enable = false;
+hardware.firmware = «derivation /nix/store/00000000000000000000000000000000-firmware.drv»;
+hardware.firmwareCompression = "zstd";
+hardware.gpgSmartcards.enable = false;
+hardware.keyboard.teck.enable = false;
+hardware.keyboard.uhk.enable = false;
+hardware.keyboard.zsa.enable = false;
+hardware.ledger.enable = false;
+hardware.new-lg4ff.enable = false;
+hardware.nitrokey.enable = false;
+hardware.onlykey.enable = false;
+hardware.saleae-logic.enable = false;
+hardware.steam-hardware.enable = false;
+hardware.system76.kernel-modules.enable = false;
+hardware.trackpoint.fakeButtons = false;
+hardware.tuxedo-drivers.enable = false;
+hardware.usbStorage.manageShutdown = false;
+hardware.wirelessRegulatoryDatabase = false;
+hardware.xone.enable = false;
+hardware.xpad-noone.enable = false;
+hardware.xpadneo.enable = false;
+ids.gids.systemd-timesync = 154;
+ids.uids.systemd-timesync = 154;
+meta.doc.".0".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/desktop-managers/gnome.md;
+meta.doc.".1".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/x11/desktop-managers/pantheon.md;
+meta.doc.".2".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/system/boot/loader/external/external.md;
+meta.doc.".3".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/system/boot/clevis.md;
+meta.doc.".4".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/web-servers/garage.md;
+meta.doc.".5".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/web-apps/youtrack.md;
+meta.doc.".6".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/web-apps/suwayomi-server.md;
+meta.doc.".7".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/web-apps/strfry.md;
+meta.doc.".8".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/web-apps/plausible.md;
+meta.doc.".9".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/web-apps/pingvin-share.md;
+meta.doc.".10".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/web-apps/pihole-web.md;
+meta.doc.".11".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/web-apps/pict-rs.md;
+meta.doc.".12".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/web-apps/opencloud.md;
+meta.doc.".13".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/web-apps/nextcloud.md;
+meta.doc.".14".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/web-apps/matomo.md;
+meta.doc.".15".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/web-apps/lemmy.md;
+meta.doc.".16".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/web-apps/keycloak.md;
+meta.doc.".17".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/web-apps/jitsi-meet.md;
+meta.doc.".18".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/web-apps/honk.md;
+meta.doc.".19".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/web-apps/hatsu.md;
+meta.doc.".20".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/web-apps/grocy.md;
+meta.doc.".21".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/web-apps/gotosocial.md;
+meta.doc.".22".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/web-apps/glance.md;
+meta.doc.".23".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/web-apps/filesender.md;
+meta.doc.".24".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/web-apps/discourse.md;
+meta.doc.".25".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/web-apps/davis.md;
+meta.doc.".26".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/web-apps/castopod.md;
+meta.doc.".27".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/web-apps/c2fmzq-server.md;
+meta.doc.".28".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/web-apps/akkoma.md;
+meta.doc.".29".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/system/systemd-lock-handler.md;
+meta.doc.".30".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/system/kerberos/kerberos-server.md;
+meta.doc.".31".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/search/meilisearch.md;
+meta.doc.".32".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/networking/yggdrasil.md;
+meta.doc.".33".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/networking/umurmur.md;
+meta.doc.".34".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/networking/prosody.md;
+meta.doc.".35".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/networking/pleroma.md;
+meta.doc.".36".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/networking/pihole-ftl.md;
+meta.doc.".37".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/networking/netbird/server.md;
+meta.doc.".38".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/networking/netbird.md;
+meta.doc.".39".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/networking/mosquitto.md;
+meta.doc.".40".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/networking/jotta-cli.md;
+meta.doc.".41".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/networking/gns3-server.md;
+meta.doc.".42".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/networking/firefox-syncserver.md;
+meta.doc.".43".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/networking/doh-server.md;
+meta.doc.".44".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/networking/dnsmasq.md;
+meta.doc.".45".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/networking/crab-hole.md;
+meta.doc.".46".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/networking/anubis.md;
+meta.doc.".47".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/network-filesystems/samba.md;
+meta.doc.".48".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/network-filesystems/litestream/default.md;
+meta.doc.".49".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/monitoring/prometheus/exporters.md;
+meta.doc.".50".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/monitoring/parsedmarc.md;
+meta.doc.".51".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/monitoring/ocsinventory-agent.md;
+meta.doc.".52".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/monitoring/goss.md;
+meta.doc.".53".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/monitoring/certspotter.md;
+meta.doc.".54".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/misc/weechat.md;
+meta.doc.".55".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/misc/taskserver/default.md;
+meta.doc.".56".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/misc/sourcehut/default.md;
+meta.doc.".57".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/misc/gitlab.md;
+meta.doc.".58".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/misc/forgejo.md;
+meta.doc.".59".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/misc/dump1090-fa.md;
+meta.doc.".60".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/misc/kafka.md;
+meta.doc.".61".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/misc/anki-sync-server.md;
+meta.doc.".62".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/matrix/synapse.md;
+meta.doc.".63".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/matrix/mjolnir.md;
+meta.doc.".64".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/matrix/mautrix-signal.md;
+meta.doc.".65".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/matrix/maubot.md;
+meta.doc.".66".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/mail/mailman.md;
+meta.doc.".67".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/hardware/trezord.md;
+meta.doc.".68".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/hardware/display.md;
+meta.doc.".69".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/editors/emacs.md;
+meta.doc.".70".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/development/livebook.md;
+meta.doc.".71".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/development/blackfire.md;
+meta.doc.".72".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/development/athens.md;
+meta.doc.".73".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/desktops/flatpak.md;
+meta.doc.".74".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/databases/tigerbeetle.md;
+meta.doc.".75".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/databases/postgresql.md;
+meta.doc.".76".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/databases/foundationdb.md;
+meta.doc.".77".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/services/backup/borgbackup.md;
+meta.doc.".78".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/security/acme/default.md;
+meta.doc.".79".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/programs/zsh/oh-my-zsh.md;
+meta.doc.".80".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/programs/plotinus.md;
+meta.doc.".81".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/programs/digitalbitbox/default.md;
+meta.doc.".82".value = /nix/store/00000000000000000000000000000000-source/nixos/modules/i18n/input-method/default.md;
+networking.enableB43Firmware = false;
+networking.enableIntel2200BGFirmware = false;
+networking.firewall.connectionTrackingModules = [ ];
+networking.timeServers = [ "0.nixos.pool.ntp.org" "1.nixos.pool.ntp.org" "2.nixos.pool.ntp.org" "3.nixos.pool.ntp.org" ];
+networking.usePredictableInterfaceNames = true;
-nixpkgs.buildPlatform.parsed.abi.assertions.".0".assertion = «lambda assertion @ /nix/store/00000000000000000000000000000000-source/lib/systems/parse.nix:690:23»;
+nixpkgs.buildPlatform.parsed.abi.assertions.".0".assertion = «lambda assertion @ /nix/store/00000000000000000000000000000000-source/lib/systems/parse.nix:688:8»;
-nixpkgs.buildPlatform.parsed.abi.assertions.".1".assertion = «lambda assertion @ /nix/store/00000000000000000000000000000000-source/lib/systems/parse.nix:696:23»;
+nixpkgs.buildPlatform.parsed.abi.assertions.".1".assertion = «lambda assertion @ /nix/store/00000000000000000000000000000000-source/lib/systems/parse.nix:693:11»;
+powerManagement.cpuFreqGovernor = null;
+powerManagement.cpufreq.min = null;
+powerManagement.cpufreq.max = null;
-powerManagement.enable = false;
+powerManagement.enable = true;
+powerManagement.powerDownCommands = "";
+powerManagement.powerUpCommands = "";
+powerManagement.resumeCommands = ''
  # Tell dhcpcd to rebind its interfaces if it's running.
  /run/current-system/systemd/bin/systemctl reload dhcpcd.service
  '';
-security.pam.services.login.rules.session.loginuid.control = "optional";
+security.pam.services.login.rules.session.loginuid.control = "required";
 security.pam.services.login.text =
  @@ -11,6 +11,6 @@
    # Session management.
    session required /nix/store/00000000000000000000000000000000-linux-pam-1.6.1/lib/security/pam_env.so conffile=/etc/pam/environment readenv=0 # env (order 10100)
    session required /nix/store/00000000000000000000000000000000-linux-pam-1.6.1/lib/security/pam_unix.so # unix (order 10200)
   -session optional /nix/store/00000000000000000000000000000000-linux-pam-1.6.1/lib/security/pam_loginuid.so # loginuid (order 10300)
   +session required /nix/store/00000000000000000000000000000000-linux-pam-1.6.1/lib/security/pam_loginuid.so # loginuid (order 10300)
    session required /nix/store/00000000000000000000000000000000-linux-pam-1.6.1/lib/security/pam_lastlog.so silent # lastlog (order 10700)
    session optional /nix/store/00000000000000000000000000000000-systemd-257.5/lib/security/pam_systemd.so # systemd (order 12000)
-security.pam.services.systemd-user.rules.session.loginuid.control = "optional";
+security.pam.services.systemd-user.rules.session.loginuid.control = "required";
 security.pam.services.systemd-user.text =
  @@ -11,5 +11,5 @@
    # Session management.
    session required /nix/store/00000000000000000000000000000000-linux-pam-1.6.1/lib/security/pam_env.so conffile=/etc/pam/environment readenv=0 # env (order 10100)
    session required /nix/store/00000000000000000000000000000000-linux-pam-1.6.1/lib/security/pam_unix.so # unix (order 10200)
   -session optional /nix/store/00000000000000000000000000000000-linux-pam-1.6.1/lib/security/pam_loginuid.so # loginuid (order 10300)
   +session required /nix/store/00000000000000000000000000000000-linux-pam-1.6.1/lib/security/pam_loginuid.so # loginuid (order 10300)
    session optional /nix/store/00000000000000000000000000000000-systemd-257.5/lib/security/pam_systemd.so # systemd (order 12000)
+security.pam.services.vlock.allowNullPassword = false;
+security.pam.services.vlock.duoSecurity.enable = false;
-security.pam.services.vlock.enable = false;
+security.pam.services.vlock.enable = true;
+security.pam.services.vlock.enableAppArmor = false;
+security.pam.services.vlock.enableGnomeKeyring = false;
+security.pam.services.vlock.failDelay.enable = false;
+security.pam.services.vlock.forwardXAuth = false;
+security.pam.services.vlock.fprintAuth = false;
+security.pam.services.vlock.gnupg.enable = false;
+security.pam.services.vlock.googleAuthenticator.enable = false;
+security.pam.services.vlock.googleOsLoginAccountVerification = false;
+security.pam.services.vlock.googleOsLoginAuthentication = false;
+security.pam.services.vlock.kwallet.enable = false;
+security.pam.services.vlock.limits = [ ];
+security.pam.services.vlock.logFailures = false;
+security.pam.services.vlock.makeHomeDir = false;
+security.pam.services.vlock.mysqlAuth = false;
+security.pam.services.vlock.nodelay = false;
+security.pam.services.vlock.oathAuth = false;
+security.pam.services.vlock.otpwAuth = false;
+security.pam.services.vlock.p11Auth = false;
+security.pam.services.vlock.pamMount = false;
+security.pam.services.vlock.requireWheel = false;
+security.pam.services.vlock.rootOK = false;
+security.pam.services.vlock.rules.password.ldap.enable = false;
+security.pam.services.vlock.rules.password.mysql.enable = false;
+security.pam.services.vlock.rules.password.ecryptfs.enable = false;
+security.pam.services.vlock.rules.password.krb5.enable = false;
+security.pam.services.vlock.rules.password.mount.enable = false;
+security.pam.services.vlock.rules.password.kanidm.enable = false;
+security.pam.services.vlock.rules.password.fscrypt.enable = false;
+security.pam.services.vlock.rules.password.unix.name = "unix";
+security.pam.services.vlock.rules.password.unix.args.".0" = "nullok";
+security.pam.services.vlock.rules.password.unix.args.".1" = "yescrypt";
+security.pam.services.vlock.rules.password.unix.modulePath = "/nix/store/00000000000000000000000000000000-linux-pam-1.6.1/lib/security/pam_unix.so";
+security.pam.services.vlock.rules.password.unix.enable = true;
+security.pam.services.vlock.rules.password.unix.settings.nullok = true;
+security.pam.services.vlock.rules.password.unix.settings.yescrypt = true;
+security.pam.services.vlock.rules.password.unix.order = 10200;
+security.pam.services.vlock.rules.password.unix.control = "sufficient";
+security.pam.services.vlock.rules.password.sss.enable = false;
+security.pam.services.vlock.rules.password.systemd_home.enable = false;
+security.pam.services.vlock.rules.password.zfs_key.enable = false;
+security.pam.services.vlock.rules.password.gnome_keyring.enable = false;
+security.pam.services.vlock.rules.auth.ldap.enable = false;
+security.pam.services.vlock.rules.auth.mysql.enable = false;
+security.pam.services.vlock.rules.auth.wheel.enable = false;
+security.pam.services.vlock.rules.auth.krb5.enable = false;
+security.pam.services.vlock.rules.auth.oath.enable = false;
+security.pam.services.vlock.rules.auth.p11.enable = false;
+security.pam.services.vlock.rules.auth.u2f.enable = false;
+security.pam.services.vlock.rules.auth.yubico.enable = false;
+security.pam.services.vlock.rules.auth.fprintd.enable = false;
+security.pam.services.vlock.rules.auth.rssh.enable = false;
+security.pam.services.vlock.rules.auth.kanidm.enable = false;
+security.pam.services.vlock.rules.auth.ussh.enable = false;
+security.pam.services.vlock.rules.auth.otpw.enable = false;
+security.pam.services.vlock.rules.auth.deny.name = "deny";
+security.pam.services.vlock.rules.auth.deny.modulePath = "/nix/store/00000000000000000000000000000000-linux-pam-1.6.1/lib/security/pam_deny.so";
+security.pam.services.vlock.rules.auth.deny.enable = true;
+security.pam.services.vlock.rules.auth.deny.order = 12400;
+security.pam.services.vlock.rules.auth.deny.control = "required";
+security.pam.services.vlock.rules.auth.unix.name = "unix";
+security.pam.services.vlock.rules.auth.unix.args.".0" = "likeauth";
+security.pam.services.vlock.rules.auth.unix.args.".1" = "try_first_pass";
+security.pam.services.vlock.rules.auth.unix.modulePath = "/nix/store/00000000000000000000000000000000-linux-pam-1.6.1/lib/security/pam_unix.so";
+security.pam.services.vlock.rules.auth.unix.enable = true;
+security.pam.services.vlock.rules.auth.unix.settings.nodelay = false;
+security.pam.services.vlock.rules.auth.unix.settings.nullok = false;
+security.pam.services.vlock.rules.auth.unix.settings.likeauth = true;
+security.pam.services.vlock.rules.auth.unix.settings.try_first_pass = true;
+security.pam.services.vlock.rules.auth.unix.order = 11600;
+security.pam.services.vlock.rules.auth.unix.control = "sufficient";
+security.pam.services.vlock.rules.auth.p9.enable = false;
+security.pam.services.vlock.rules.auth.sss.enable = false;
+security.pam.services.vlock.rules.auth.oslogin_login.enable = false;
+security.pam.services.vlock.rules.auth.systemd_home.enable = false;
+security.pam.services.vlock.rules.auth.rootok.enable = false;
+security.pam.services.vlock.rules.auth.faillock.enable = false;
+security.pam.services.vlock.rules.auth.ssh_agent_auth.enable = false;
+security.pam.services.vlock.rules.auth.ccreds-validate.enable = false;
+security.pam.services.vlock.rules.auth.ccreds-store.enable = false;
+security.pam.services.vlock.rules.account.ldap.enable = false;
+security.pam.services.vlock.rules.account.mysql.enable = false;
+security.pam.services.vlock.rules.account.krb5.enable = false;
+security.pam.services.vlock.rules.account.kanidm.enable = false;
+security.pam.services.vlock.rules.account.unix.name = "unix";
+security.pam.services.vlock.rules.account.unix.modulePath = "/nix/store/00000000000000000000000000000000-linux-pam-1.6.1/lib/security/pam_unix.so";
+security.pam.services.vlock.rules.account.unix.enable = true;
+security.pam.services.vlock.rules.account.unix.order = 10900;
+security.pam.services.vlock.rules.account.unix.control = "required";
+security.pam.services.vlock.rules.account.sss.enable = false;
+security.pam.services.vlock.rules.account.oslogin_login.enable = false;
+security.pam.services.vlock.rules.account.oslogin_admin.enable = false;
+security.pam.services.vlock.rules.account.systemd_home.enable = false;
+security.pam.services.vlock.rules.session.systemd.enable = false;
+security.pam.services.vlock.rules.session.apparmor.enable = false;
+security.pam.services.vlock.rules.session.ldap.enable = false;
+security.pam.services.vlock.rules.session.mysql.enable = false;
+security.pam.services.vlock.rules.session.ecryptfs.enable = false;
+security.pam.services.vlock.rules.session.env.name = "env";
+security.pam.services.vlock.rules.session.env.args.".0" = "conffile=/etc/pam/environment";
+security.pam.services.vlock.rules.session.env.args.".1" = "readenv=0";
+security.pam.services.vlock.rules.session.env.modulePath = "/nix/store/00000000000000000000000000000000-linux-pam-1.6.1/lib/security/pam_env.so";
+security.pam.services.vlock.rules.session.env.enable = true;
+security.pam.services.vlock.rules.session.env.settings.conffile = "/etc/pam/environment";
+security.pam.services.vlock.rules.session.env.settings.readenv = 0;
+security.pam.services.vlock.rules.session.env.order = 10100;
+security.pam.services.vlock.rules.session.env.control = "required";
+security.pam.services.vlock.rules.session.gnupg.enable = false;
+security.pam.services.vlock.rules.session.motd.enable = false;
+security.pam.services.vlock.rules.session.xauth.enable = false;
+security.pam.services.vlock.rules.session.krb5.enable = false;
+security.pam.services.vlock.rules.session.mount.enable = false;
+security.pam.services.vlock.rules.session.limits.enable = false;
+security.pam.services.vlock.rules.session.kwallet.enable = false;
+security.pam.services.vlock.rules.session.kanidm.enable = false;
+security.pam.services.vlock.rules.session.intune.enable = false;
+security.pam.services.vlock.rules.session.otpw.enable = false;
+security.pam.services.vlock.rules.session.fscrypt.enable = false;
+security.pam.services.vlock.rules.session.unix.name = "unix";
+security.pam.services.vlock.rules.session.unix.modulePath = "/nix/store/00000000000000000000000000000000-linux-pam-1.6.1/lib/security/pam_unix.so";
+security.pam.services.vlock.rules.session.unix.enable = true;
+security.pam.services.vlock.rules.session.unix.order = 10200;
+security.pam.services.vlock.rules.session.unix.control = "required";
+security.pam.services.vlock.rules.session.sss.enable = false;
+security.pam.services.vlock.rules.session.systemd_home.enable = false;
+security.pam.services.vlock.rules.session.zfs_key.enable = false;
+security.pam.services.vlock.rules.session.gnome_keyring.enable = false;
+security.pam.services.vlock.rules.session.loginuid.enable = false;
+security.pam.services.vlock.rules.session.tty_audit.enable = false;
+security.pam.services.vlock.rules.session.mkhomedir.enable = false;
+security.pam.services.vlock.rules.session.lastlog.enable = false;
+security.pam.services.vlock.rules.session.fscrypt-skip-systemd.enable = false;
+security.pam.services.vlock.rules.session.zfs_key-skip-systemd.enable = false;
+security.pam.services.vlock.setEnvironment = true;
+security.pam.services.vlock.setLoginUid = false;
+security.pam.services.vlock.showMotd = false;
+security.pam.services.vlock.startSession = false;
+security.pam.services.vlock.text = ''
  # Account management.
  account required /nix/store/00000000000000000000000000000000-linux-pam-1.6.1/lib/security/pam_unix.so # unix (order 10900)
  
  # Authentication management.
  auth sufficient /nix/store/00000000000000000000000000000000-linux-pam-1.6.1/lib/security/pam_unix.so likeauth try_first_pass # unix (order 11600)
  auth required /nix/store/00000000000000000000000000000000-linux-pam-1.6.1/lib/security/pam_deny.so # deny (order 12400)
  
  # Password management.
  password sufficient /nix/store/00000000000000000000000000000000-linux-pam-1.6.1/lib/security/pam_unix.so nullok yescrypt # unix (order 10200)
  
  # Session management.
  session required /nix/store/00000000000000000000000000000000-linux-pam-1.6.1/lib/security/pam_env.so conffile=/etc/pam/environment readenv=0 # env (order 10100)
  session required /nix/store/00000000000000000000000000000000-linux-pam-1.6.1/lib/security/pam_unix.so # unix (order 10200)
  '';
+security.pam.services.vlock.ttyAudit.enable = false;
+security.pam.services.vlock.u2fAuth = false;
+security.pam.services.vlock.unixAuth = true;
+security.pam.services.vlock.updateWtmp = false;
+security.pam.services.vlock.yubicoAuth = false;
+security.pam.services.vlock.zfs = false;
+services.getty.loginProgram = "/nix/store/00000000000000000000000000000000-shadow-4.17.4/bin/login";
+services.getty.autologinUser = null;
+services.getty.autologinOnce = false;
+services.getty.loginOptions = null;
+services.getty.greetingLine = "<<< Welcome to NixOS 25.11.20250603.ba487db (\\m) - \\l >>>";
+services.getty.helpLine = ''
  
  Run 'nixos-help' for the NixOS manual.'';
-services.lvm.enable = false;
+services.lvm.enable = true;
+services.lvm.package = «derivation /nix/store/00000000000000000000000000000000-lvm2-2.03.31.drv»;
-services.timesyncd.enable = false;
+services.timesyncd.enable = true;
+services.timesyncd.extraConfig = "";
+services.timesyncd.fallbackServers = [ "0.nixos.pool.ntp.org" "1.nixos.pool.ntp.org" "2.nixos.pool.ntp.org" "3.nixos.pool.ntp.org" ];
+services.timesyncd.servers = null;
-services.udev.enable = false;
+services.udev.enable = true;
+services.udev.extraHwdb = "";
+services.udev.extraRules = ''
  
  KERNEL=="tun", TAG+="systemd"
  
  # Needed for gpm.
  SUBSYSTEM=="input", KERNEL=="mice", TAG+="systemd"
  
  SUBSYSTEM=="misc", KERNEL=="sgx_enclave",   SYMLINK+="sgx/enclave"
  SUBSYSTEM=="misc", KERNEL=="sgx_provision", SYMLINK+="sgx/provision"
  '';
+services.udev.packages = [ «derivation /nix/store/00000000000000000000000000000000-ipv6-privacy-extensions.rules.drv» «derivation /nix/store/00000000000000000000000000000000-ipv6-privacy-extensions.rules.drv» «derivation /nix/store/00000000000000000000000000000000-lvm2-2.03.31.drv» «derivation /nix/store/00000000000000000000000000000000-bcache-tools-1.0.8.drv» «derivation /nix/store/00000000000000000000000000000000-extra-udev-rules.drv» «derivation /nix/store/00000000000000000000000000000000-extra-hwdb-file.drv» ];
+services.udev.path = [ «derivation /nix/store/00000000000000000000000000000000-coreutils-9.7.drv» «derivation /nix/store/00000000000000000000000000000000-gnused-4.9.drv» «derivation /nix/store/00000000000000000000000000000000-gnugrep-3.11.drv» «derivation /nix/store/00000000000000000000000000000000-util-linux-2.41.drv» «derivation /nix/store/00000000000000000000000000000000-systemd-257.5.drv» ];
+system.activationScripts.modprobe.text = ''
  # Allow the kernel to find our wrapped modprobe (which searches
  # in the right location in the Nix store for kernel modules).
  # We need this when the kernel (or some module) auto-loads a
  # module.
  echo /nix/store/00000000000000000000000000000000-kmod-31/bin/modprobe > /proc/sys/kernel/modprobe
  '';
+system.activationScripts.modprobe.supportsDryActivation = false;
+system.activationScripts.modprobe.deps.".0" = "specialfs";
 system.activationScripts.script =
  @@ -114,6 +114,36 @@
      printf "Activation script snippet '%s' failed (%s)\n" "hashes" "$_localstatus"
    fi
    
   +#### Activation script snippet modprobe:
   +_localstatus=0
   +# Allow the kernel to find our wrapped modprobe (which searches
   +# in the right location in the Nix store for kernel modules).
   +# We need this when the kernel (or some module) auto-loads a
   +# module.
   +echo /nix/store/00000000000000000000000000000000-kmod-31/bin/modprobe > /proc/sys/kernel/modprobe
   +
   +
   +if (( _localstatus > 0 )); then
   +  printf "Activation script snippet '%s' failed (%s)\n" "modprobe" "$_localstatus"
   +fi
   +
   +#### Activation script snippet udevd:
   +_localstatus=0
   +# The deprecated hotplug uevent helper is not used anymore
   +if [ -e /proc/sys/kernel/hotplug ]; then
   +  echo "" > /proc/sys/kernel/hotplug
   +fi
   +
   +# Allow the kernel to find our firmware.
   +if [ -e /sys/module/firmware_class/parameters/path ]; then
   +  echo -n "/nix/store/00000000000000000000000000000000-firmware/lib/firmware" > /sys/module/firmware_class/parameters/path
   +fi
   +
   +
   +if (( _localstatus > 0 )); then
   +  printf "Activation script snippet '%s' failed (%s)\n" "udevd" "$_localstatus"
   +fi
   +
    #### Activation script snippet usrbinenv:
    _localstatus=0
    mkdir -p /usr/bin
+system.activationScripts.udevd = ''
  # The deprecated hotplug uevent helper is not used anymore
  if [ -e /proc/sys/kernel/hotplug ]; then
    echo "" > /proc/sys/kernel/hotplug
  fi
  
  # Allow the kernel to find our firmware.
  if [ -e /sys/module/firmware_class/parameters/path ]; then
    echo -n "/nix/store/00000000000000000000000000000000-firmware/lib/firmware" > /sys/module/firmware_class/parameters/path
  fi
  '';
-system.build.installBootLoader = "/nix/store/00000000000000000000000000000000-coreutils-9.7/bin/true";
+system.build.installBootLoader = «derivation /nix/store/00000000000000000000000000000000-install-grub.sh.drv»;
 system.dryActivationScript =
  @@ -34,6 +34,8 @@
    #### Activation script snippet specialfs does not support dry activation.
    #### Activation script snippet etc does not support dry activation.
    #### Activation script snippet hashes does not support dry activation.
   +#### Activation script snippet modprobe does not support dry activation.
   +#### Activation script snippet udevd does not support dry activation.
    #### Activation script snippet usrbinenv does not support dry activation.
    #### Activation script snippet var does not support dry activation.
    
+system.modulesTree = «derivation /nix/store/00000000000000000000000000000000-linux-6.12.32-modules.drv»;
 system.systemBuilderArgs.activationScript =
  @@ -114,6 +114,36 @@
      printf "Activation script snippet '%s' failed (%s)\n" "hashes" "$_localstatus"
    fi
    
   +#### Activation script snippet modprobe:
   +_localstatus=0
   +# Allow the kernel to find our wrapped modprobe (which searches
   +# in the right location in the Nix store for kernel modules).
   +# We need this when the kernel (or some module) auto-loads a
   +# module.
   +echo /nix/store/00000000000000000000000000000000-kmod-31/bin/modprobe > /proc/sys/kernel/modprobe
   +
   +
   +if (( _localstatus > 0 )); then
   +  printf "Activation script snippet '%s' failed (%s)\n" "modprobe" "$_localstatus"
   +fi
   +
   +#### Activation script snippet udevd:
   +_localstatus=0
   +# The deprecated hotplug uevent helper is not used anymore
   +if [ -e /proc/sys/kernel/hotplug ]; then
   +  echo "" > /proc/sys/kernel/hotplug
   +fi
   +
   +# Allow the kernel to find our firmware.
   +if [ -e /sys/module/firmware_class/parameters/path ]; then
   +  echo -n "/nix/store/00000000000000000000000000000000-firmware/lib/firmware" > /sys/module/firmware_class/parameters/path
   +fi
   +
   +
   +if (( _localstatus > 0 )); then
   +  printf "Activation script snippet '%s' failed (%s)\n" "udevd" "$_localstatus"
   +fi
   +
    #### Activation script snippet usrbinenv:
    _localstatus=0
    mkdir -p /usr/bin
+system.systemBuilderArgs.configurationName = "";
 system.systemBuilderArgs.dryActivationScript =
  @@ -34,6 +34,8 @@
    #### Activation script snippet specialfs does not support dry activation.
    #### Activation script snippet etc does not support dry activation.
    #### Activation script snippet hashes does not support dry activation.
   +#### Activation script snippet modprobe does not support dry activation.
   +#### Activation script snippet udevd does not support dry activation.
    #### Activation script snippet usrbinenv does not support dry activation.
    #### Activation script snippet var does not support dry activation.
    
-system.systemBuilderArgs.installBootLoader = "/nix/store/00000000000000000000000000000000-coreutils-9.7/bin/true";
+system.systemBuilderArgs.installBootLoader = «derivation /nix/store/00000000000000000000000000000000-install-grub.sh.drv»;
+system.systemBuilderArgs.kernelParams.".0" = "loglevel=4";
+system.systemBuilderArgs.kernelParams.".1" = "lsm=landlock,yama,bpf";
 system.systemBuilderCommands =
  @@ -1,3 +1,23 @@
   +echo -n "$configurationName" > $out/configuration-name
   +
   +if [ ! -f /nix/store/00000000000000000000000000000000-linux-6.12.32/bzImage ]; then
   +  echo "The bootloader cannot find the proper kernel image."
   +  echo "(Expecting /nix/store/00000000000000000000000000000000-linux-6.12.32/bzImage)"
   +  false
   +fi
   +
   +ln -s /nix/store/00000000000000000000000000000000-linux-6.12.32/bzImage $out/kernel
   +ln -s /nix/store/00000000000000000000000000000000-linux-6.12.32-modules $out/kernel-modules
   +
   +
   +echo -n "$kernelParams" > $out/kernel-params
   +
   +ln -s /nix/store/00000000000000000000000000000000-initrd-linux-6.12.32/initrd $out/initrd
   +
   +ln -s /nix/store/00000000000000000000000000000000-append-initrd-secrets/bin/append-initrd-secrets $out
   +
   +ln -s /nix/store/00000000000000000000000000000000-firmware/lib/firmware $out/firmware
   +
    mkdir $out/specialisation
    
    
  @@ -10,7 +30,7 @@
        --set OUT $out \
        --set TOPLEVEL ${!toplevelVar} \
        --set DISTRO_ID nixos \
   -    --set INSTALL_BOOTLOADER /nix/store/00000000000000000000000000000000-coreutils-9.7/bin/true \
   +    --set INSTALL_BOOTLOADER /nix/store/00000000000000000000000000000000-install-grub.sh \
        --set PRE_SWITCH_CHECK /nix/store/00000000000000000000000000000000-pre-switch-checks/bin/pre-switch-checks \
        --set LOCALE_ARCHIVE /nix/store/00000000000000000000000000000000-glibc-locales-2.40-66/lib/locale/locale-archive \
        --set SYSTEMD /nix/store/00000000000000000000000000000000-systemd-257.5
-systemd.mounts.".0".mountConfig.What = "tmpfs";
+systemd.mounts.".0".mountConfig.What = "/run/initramfs";
-systemd.mounts.".0".mountConfig.Where = "/run/initramfs";
+systemd.mounts.".0".mountConfig.X-Reload-Triggers = "tmpfs";
-systemd.mounts.".1".mountConfig.What = "tmpfs";
+systemd.mounts.".1".mountConfig.What = "/run/wrappers";
-systemd.mounts.".1".mountConfig.Where = "/run/wrappers";
+systemd.mounts.".1".mountConfig.X-Reload-Triggers = "tmpfs";
+systemd.services."autovt@".name = "autovt@.service";
+systemd.services."autovt@".description = "";
-systemd.services."autovt@".path.".0" = «derivation /nix/store/00000000000000000000000000000000-coreutils-9.7.drv»;
-systemd.services."autovt@".path.".1" = «derivation /nix/store/00000000000000000000000000000000-findutils-4.10.0.drv»;
-systemd.services."autovt@".path.".2" = «derivation /nix/store/00000000000000000000000000000000-gnugrep-3.11.drv»;
-systemd.services."autovt@".path.".3" = «derivation /nix/store/00000000000000000000000000000000-gnused-4.9.drv»;
-systemd.services."autovt@".path.".4" = «derivation /nix/store/00000000000000000000000000000000-systemd-257.5.drv»;
+systemd.services."autovt@".enable = true;
+systemd.services."autovt@".environment.PATH = "/nix/store/00000000000000000000000000000000-coreutils-9.7/bin:/nix/store/00000000000000000000000000000000-findutils-4.10.0/bin:/nix/store/00000000000000000000000000000000-gnugrep-3.11/bin:/nix/store/00000000000000000000000000000000-gnused-4.9/bin:/nix/store/00000000000000000000000000000000-systemd-257.5/bin:/nix/store/00000000000000000000000000000000-coreutils-9.7/sbin:/nix/store/00000000000000000000000000000000-findutils-4.10.0/sbin:/nix/store/00000000000000000000000000000000-gnugrep-3.11/sbin:/nix/store/00000000000000000000000000000000-gnused-4.9/sbin:/nix/store/00000000000000000000000000000000-systemd-257.5/sbin";
+systemd.services."autovt@".reloadIfChanged = false;
+systemd.services."autovt@".serviceConfig.ExecStart.".0" = "";
+systemd.services."autovt@".serviceConfig.ExecStart.".1" = "/nix/store/00000000000000000000000000000000-util-linux-2.41-bin/bin/agetty --login-program /nix/store/00000000000000000000000000000000-shadow-4.17.4/bin/login --noclear %I $TERM";
+systemd.services."autovt@".script = "";
+systemd.services."autovt@".preStart = "";
+systemd.services."autovt@".restartIfChanged = false;
+systemd.services."autovt@".overrideStrategy = "asDropinIfExists";
+systemd.services."autovt@".stopIfChanged = true;
+systemd.services."autovt@".confinement.enable = false;
+systemd.services."autovt@".postStop = "";
+systemd.services."autovt@".postStart = "";
+systemd.services."autovt@".notSocketActivated = false;
+systemd.services."autovt@".reload = "";
+systemd.services."autovt@".preStop = "";
+systemd.services.console-getty.name = "console-getty.service";
+systemd.services.console-getty.enable = false;
+systemd.services.console-getty.reloadIfChanged = false;
+systemd.services.console-getty.script = "";
+systemd.services.console-getty.preStart = "";
+systemd.services.console-getty.overrideStrategy = "asDropinIfExists";
+systemd.services.console-getty.confinement.enable = false;
+systemd.services.console-getty.postStop = "";
+systemd.services.console-getty.postStart = "";
+systemd.services.console-getty.reload = "";
+systemd.services.console-getty.preStop = "";
+systemd.services."container-getty@".name = "container-getty@.service";
+systemd.services."container-getty@".description = "";
-systemd.services."container-getty@".path.".0" = «derivation /nix/store/00000000000000000000000000000000-coreutils-9.7.drv»;
-systemd.services."container-getty@".path.".1" = «derivation /nix/store/00000000000000000000000000000000-findutils-4.10.0.drv»;
-systemd.services."container-getty@".path.".2" = «derivation /nix/store/00000000000000000000000000000000-gnugrep-3.11.drv»;
-systemd.services."container-getty@".path.".3" = «derivation /nix/store/00000000000000000000000000000000-gnused-4.9.drv»;
-systemd.services."container-getty@".path.".4" = «derivation /nix/store/00000000000000000000000000000000-systemd-257.5.drv»;
+systemd.services."container-getty@".enable = true;
+systemd.services."container-getty@".environment.PATH = "/nix/store/00000000000000000000000000000000-coreutils-9.7/bin:/nix/store/00000000000000000000000000000000-findutils-4.10.0/bin:/nix/store/00000000000000000000000000000000-gnugrep-3.11/bin:/nix/store/00000000000000000000000000000000-gnused-4.9/bin:/nix/store/00000000000000000000000000000000-systemd-257.5/bin:/nix/store/00000000000000000000000000000000-coreutils-9.7/sbin:/nix/store/00000000000000000000000000000000-findutils-4.10.0/sbin:/nix/store/00000000000000000000000000000000-gnugrep-3.11/sbin:/nix/store/00000000000000000000000000000000-gnused-4.9/sbin:/nix/store/00000000000000000000000000000000-systemd-257.5/sbin";
+systemd.services."container-getty@".reloadIfChanged = false;
+systemd.services."container-getty@".serviceConfig.ExecStart.".0" = "";
+systemd.services."container-getty@".serviceConfig.ExecStart.".1" = "/nix/store/00000000000000000000000000000000-util-linux-2.41-bin/bin/agetty --login-program /nix/store/00000000000000000000000000000000-shadow-4.17.4/bin/login --noclear --keep-baud pts/%I 115200,38400,9600 $TERM";
+systemd.services."container-getty@".script = "";
+systemd.services."container-getty@".preStart = "";
+systemd.services."container-getty@".restartIfChanged = false;
+systemd.services."container-getty@".overrideStrategy = "asDropinIfExists";
+systemd.services."container-getty@".stopIfChanged = true;
+systemd.services."container-getty@".confinement.enable = false;
+systemd.services."container-getty@".postStop = "";
+systemd.services."container-getty@".postStart = "";
+systemd.services."container-getty@".notSocketActivated = false;
+systemd.services."container-getty@".reload = "";
+systemd.services."container-getty@".preStop = "";
+systemd.services."getty@".name = "getty@.service";
+systemd.services."getty@".description = "";
-systemd.services."getty@".path.".0" = «derivation /nix/store/00000000000000000000000000000000-coreutils-9.7.drv»;
-systemd.services."getty@".path.".1" = «derivation /nix/store/00000000000000000000000000000000-findutils-4.10.0.drv»;
-systemd.services."getty@".path.".2" = «derivation /nix/store/00000000000000000000000000000000-gnugrep-3.11.drv»;
-systemd.services."getty@".path.".3" = «derivation /nix/store/00000000000000000000000000000000-gnused-4.9.drv»;
-systemd.services."getty@".path.".4" = «derivation /nix/store/00000000000000000000000000000000-systemd-257.5.drv»;
+systemd.services."getty@".enable = true;
+systemd.services."getty@".environment.PATH = "/nix/store/00000000000000000000000000000000-coreutils-9.7/bin:/nix/store/00000000000000000000000000000000-findutils-4.10.0/bin:/nix/store/00000000000000000000000000000000-gnugrep-3.11/bin:/nix/store/00000000000000000000000000000000-gnused-4.9/bin:/nix/store/00000000000000000000000000000000-systemd-257.5/bin:/nix/store/00000000000000000000000000000000-coreutils-9.7/sbin:/nix/store/00000000000000000000000000000000-findutils-4.10.0/sbin:/nix/store/00000000000000000000000000000000-gnugrep-3.11/sbin:/nix/store/00000000000000000000000000000000-gnused-4.9/sbin:/nix/store/00000000000000000000000000000000-systemd-257.5/sbin";
+systemd.services."getty@".environment.TTY = "%I";
+systemd.services."getty@".reloadIfChanged = false;
+systemd.services."getty@".serviceConfig.ExecStart.".0" = "";
-systemd.services."getty@".serviceConfig.ExecStart.".1" = «derivation /nix/store/00000000000000000000000000000000-getty.drv»;
+systemd.services."getty@".script = "";
+systemd.services."getty@".preStart = "";
+systemd.services."getty@".restartIfChanged = false;
+systemd.services."getty@".overrideStrategy = "asDropinIfExists";
+systemd.services."getty@".stopIfChanged = true;
+systemd.services."getty@".confinement.enable = false;
+systemd.services."getty@".postStop = "";
+systemd.services."getty@".postStart = "";
+systemd.services."getty@".notSocketActivated = false;
+systemd.services."getty@".reload = "";
+systemd.services."getty@".preStop = "";
+systemd.services.post-resume.name = "post-resume.service";
+systemd.services.post-resume.description = "Post-Resume Actions";
-systemd.services.post-resume.path.".0" = «derivation /nix/store/00000000000000000000000000000000-coreutils-9.7.drv»;
-systemd.services.post-resume.path.".1" = «derivation /nix/store/00000000000000000000000000000000-findutils-4.10.0.drv»;
-systemd.services.post-resume.path.".2" = «derivation /nix/store/00000000000000000000000000000000-gnugrep-3.11.drv»;
-systemd.services.post-resume.path.".3" = «derivation /nix/store/00000000000000000000000000000000-gnused-4.9.drv»;
-systemd.services.post-resume.path.".4" = «derivation /nix/store/00000000000000000000000000000000-systemd-257.5.drv»;
+systemd.services.post-resume.enable = true;
+systemd.services.post-resume.environment.PATH = "/nix/store/00000000000000000000000000000000-coreutils-9.7/bin:/nix/store/00000000000000000000000000000000-findutils-4.10.0/bin:/nix/store/00000000000000000000000000000000-gnugrep-3.11/bin:/nix/store/00000000000000000000000000000000-gnused-4.9/bin:/nix/store/00000000000000000000000000000000-systemd-257.5/bin:/nix/store/00000000000000000000000000000000-coreutils-9.7/sbin:/nix/store/00000000000000000000000000000000-findutils-4.10.0/sbin:/nix/store/00000000000000000000000000000000-gnugrep-3.11/sbin:/nix/store/00000000000000000000000000000000-gnused-4.9/sbin:/nix/store/00000000000000000000000000000000-systemd-257.5/sbin";
+systemd.services.post-resume.reloadIfChanged = false;
+systemd.services.post-resume.serviceConfig.ExecStart = "/nix/store/00000000000000000000000000000000-unit-script-post-resume-start/bin/post-resume-start ";
+systemd.services.post-resume.serviceConfig.Type = "oneshot";
+systemd.services.post-resume.script = ''
  /run/current-system/systemd/bin/systemctl try-restart --no-block post-resume.target
  # Tell dhcpcd to rebind its interfaces if it's running.
  /run/current-system/systemd/bin/systemctl reload dhcpcd.service
  
  
  '';
+systemd.services.post-resume.unitConfig.After = "suspend.target hibernate.target hybrid-sleep.target suspend-then-hibernate.target";
+systemd.services.post-resume.unitConfig.Description = "Post-Resume Actions";
+systemd.services.post-resume.preStart = "";
+systemd.services.post-resume.after.".0" = "suspend.target";
+systemd.services.post-resume.after.".1" = "hibernate.target";
+systemd.services.post-resume.after.".2" = "hybrid-sleep.target";
+systemd.services.post-resume.after.".3" = "suspend-then-hibernate.target";
+systemd.services.post-resume.restartIfChanged = true;
+systemd.services.post-resume.overrideStrategy = "asDropinIfExists";
+systemd.services.post-resume.stopIfChanged = true;
+systemd.services.post-resume.confinement.enable = false;
+systemd.services.post-resume.postStop = "";
+systemd.services.post-resume.postStart = "";
+systemd.services.post-resume.notSocketActivated = false;
+systemd.services.post-resume.enableStrictShellChecks = false;
+systemd.services.post-resume.reload = "";
+systemd.services.post-resume.preStop = "";
+systemd.services.post-resume.scriptArgs = "";
+systemd.services.pre-sleep.name = "pre-sleep.service";
+systemd.services.pre-sleep.description = "Pre-Sleep Actions";
-systemd.services.pre-sleep.path.".0" = «derivation /nix/store/00000000000000000000000000000000-coreutils-9.7.drv»;
-systemd.services.pre-sleep.path.".1" = «derivation /nix/store/00000000000000000000000000000000-findutils-4.10.0.drv»;
-systemd.services.pre-sleep.path.".2" = «derivation /nix/store/00000000000000000000000000000000-gnugrep-3.11.drv»;
-systemd.services.pre-sleep.path.".3" = «derivation /nix/store/00000000000000000000000000000000-gnused-4.9.drv»;
-systemd.services.pre-sleep.path.".4" = «derivation /nix/store/00000000000000000000000000000000-systemd-257.5.drv»;
+systemd.services.pre-sleep.enable = true;
+systemd.services.pre-sleep.before.".0" = "sleep.target";
+systemd.services.pre-sleep.environment.PATH = "/nix/store/00000000000000000000000000000000-coreutils-9.7/bin:/nix/store/00000000000000000000000000000000-findutils-4.10.0/bin:/nix/store/00000000000000000000000000000000-gnugrep-3.11/bin:/nix/store/00000000000000000000000000000000-gnused-4.9/bin:/nix/store/00000000000000000000000000000000-systemd-257.5/bin:/nix/store/00000000000000000000000000000000-coreutils-9.7/sbin:/nix/store/00000000000000000000000000000000-findutils-4.10.0/sbin:/nix/store/00000000000000000000000000000000-gnugrep-3.11/sbin:/nix/store/00000000000000000000000000000000-gnused-4.9/sbin:/nix/store/00000000000000000000000000000000-systemd-257.5/sbin";
+systemd.services.pre-sleep.wantedBy.".0" = "sleep.target";
+systemd.services.pre-sleep.reloadIfChanged = false;
+systemd.services.pre-sleep.serviceConfig.ExecStart = "/nix/store/00000000000000000000000000000000-unit-script-pre-sleep-start/bin/pre-sleep-start ";
+systemd.services.pre-sleep.serviceConfig.Type = "oneshot";
+systemd.services.pre-sleep.script = ''
  
  '';
+systemd.services.pre-sleep.unitConfig.Description = "Pre-Sleep Actions";
+systemd.services.pre-sleep.unitConfig.Before = "sleep.target";
+systemd.services.pre-sleep.preStart = "";
+systemd.services.pre-sleep.restartIfChanged = true;
+systemd.services.pre-sleep.overrideStrategy = "asDropinIfExists";
+systemd.services.pre-sleep.stopIfChanged = true;
+systemd.services.pre-sleep.confinement.enable = false;
+systemd.services.pre-sleep.postStop = "";
+systemd.services.pre-sleep.postStart = "";
+systemd.services.pre-sleep.notSocketActivated = false;
+systemd.services.pre-sleep.enableStrictShellChecks = false;
+systemd.services.pre-sleep.reload = "";
+systemd.services.pre-sleep.preStop = "";
+systemd.services.pre-sleep.scriptArgs = "";
+systemd.services.reload-systemd-vconsole-setup.name = "reload-systemd-vconsole-setup.service";
+systemd.services.reload-systemd-vconsole-setup.description = "Reset console on configuration changes";
-systemd.services.reload-systemd-vconsole-setup.path.".0" = «derivation /nix/store/00000000000000000000000000000000-coreutils-9.7.drv»;
-systemd.services.reload-systemd-vconsole-setup.path.".1" = «derivation /nix/store/00000000000000000000000000000000-findutils-4.10.0.drv»;
-systemd.services.reload-systemd-vconsole-setup.path.".2" = «derivation /nix/store/00000000000000000000000000000000-gnugrep-3.11.drv»;
-systemd.services.reload-systemd-vconsole-setup.path.".3" = «derivation /nix/store/00000000000000000000000000000000-gnused-4.9.drv»;
-systemd.services.reload-systemd-vconsole-setup.path.".4" = «derivation /nix/store/00000000000000000000000000000000-systemd-257.5.drv»;
+systemd.services.reload-systemd-vconsole-setup.enable = true;
+systemd.services.reload-systemd-vconsole-setup.environment.PATH = "/nix/store/00000000000000000000000000000000-coreutils-9.7/bin:/nix/store/00000000000000000000000000000000-findutils-4.10.0/bin:/nix/store/00000000000000000000000000000000-gnugrep-3.11/bin:/nix/store/00000000000000000000000000000000-gnused-4.9/bin:/nix/store/00000000000000000000000000000000-systemd-257.5/bin:/nix/store/00000000000000000000000000000000-coreutils-9.7/sbin:/nix/store/00000000000000000000000000000000-findutils-4.10.0/sbin:/nix/store/00000000000000000000000000000000-gnugrep-3.11/sbin:/nix/store/00000000000000000000000000000000-gnused-4.9/sbin:/nix/store/00000000000000000000000000000000-systemd-257.5/sbin";
+systemd.services.reload-systemd-vconsole-setup.wantedBy.".0" = "multi-user.target";
-systemd.services.reload-systemd-vconsole-setup.restartTriggers.".0" = «derivation /nix/store/00000000000000000000000000000000-vconsole.conf.drv»;
-systemd.services.reload-systemd-vconsole-setup.restartTriggers.".1" = «derivation /nix/store/00000000000000000000000000000000-console-env.drv»;
+systemd.services.reload-systemd-vconsole-setup.reloadIfChanged = true;
+systemd.services.reload-systemd-vconsole-setup.serviceConfig.RemainAfterExit = true;
+systemd.services.reload-systemd-vconsole-setup.serviceConfig.ExecStart = "/nix/store/00000000000000000000000000000000-coreutils-9.7/bin/true";
+systemd.services.reload-systemd-vconsole-setup.serviceConfig.ExecReload = "/run/current-system/systemd/bin/systemctl restart systemd-vconsole-setup";
+systemd.services.reload-systemd-vconsole-setup.script = "";
+systemd.services.reload-systemd-vconsole-setup.unitConfig.Description = "Reset console on configuration changes";
+systemd.services.reload-systemd-vconsole-setup.unitConfig.X-Restart-Triggers = "/nix/store/00000000000000000000000000000000-X-Restart-Triggers-reload-systemd-vconsole-setup";
+systemd.services.reload-systemd-vconsole-setup.preStart = "";
+systemd.services.reload-systemd-vconsole-setup.overrideStrategy = "asDropinIfExists";
+systemd.services.reload-systemd-vconsole-setup.stopIfChanged = true;
+systemd.services.reload-systemd-vconsole-setup.confinement.enable = false;
+systemd.services.reload-systemd-vconsole-setup.postStop = "";
+systemd.services.reload-systemd-vconsole-setup.postStart = "";
+systemd.services.reload-systemd-vconsole-setup.notSocketActivated = false;
+systemd.services.reload-systemd-vconsole-setup.reload = "";
+systemd.services.reload-systemd-vconsole-setup.preStop = "";
+systemd.services."serial-getty@".name = "serial-getty@.service";
+systemd.services."serial-getty@".description = "";
-systemd.services."serial-getty@".path.".0" = «derivation /nix/store/00000000000000000000000000000000-coreutils-9.7.drv»;
-systemd.services."serial-getty@".path.".1" = «derivation /nix/store/00000000000000000000000000000000-findutils-4.10.0.drv»;
-systemd.services."serial-getty@".path.".2" = «derivation /nix/store/00000000000000000000000000000000-gnugrep-3.11.drv»;
-systemd.services."serial-getty@".path.".3" = «derivation /nix/store/00000000000000000000000000000000-gnused-4.9.drv»;
-systemd.services."serial-getty@".path.".4" = «derivation /nix/store/00000000000000000000000000000000-systemd-257.5.drv»;
+systemd.services."serial-getty@".enable = true;
+systemd.services."serial-getty@".environment.PATH = "/nix/store/00000000000000000000000000000000-coreutils-9.7/bin:/nix/store/00000000000000000000000000000000-findutils-4.10.0/bin:/nix/store/00000000000000000000000000000000-gnugrep-3.11/bin:/nix/store/00000000000000000000000000000000-gnused-4.9/bin:/nix/store/00000000000000000000000000000000-systemd-257.5/bin:/nix/store/00000000000000000000000000000000-coreutils-9.7/sbin:/nix/store/00000000000000000000000000000000-findutils-4.10.0/sbin:/nix/store/00000000000000000000000000000000-gnugrep-3.11/sbin:/nix/store/00000000000000000000000000000000-gnused-4.9/sbin:/nix/store/00000000000000000000000000000000-systemd-257.5/sbin";
+systemd.services."serial-getty@".reloadIfChanged = false;
+systemd.services."serial-getty@".serviceConfig.ExecStart.".0" = "";
+systemd.services."serial-getty@".serviceConfig.ExecStart.".1" = "/nix/store/00000000000000000000000000000000-util-linux-2.41-bin/bin/agetty --login-program /nix/store/00000000000000000000000000000000-shadow-4.17.4/bin/login %I --keep-baud $TERM";
+systemd.services."serial-getty@".script = "";
+systemd.services."serial-getty@".preStart = "";
+systemd.services."serial-getty@".restartIfChanged = false;
+systemd.services."serial-getty@".overrideStrategy = "asDropinIfExists";
+systemd.services."serial-getty@".stopIfChanged = true;
+systemd.services."serial-getty@".confinement.enable = false;
+systemd.services."serial-getty@".postStop = "";
+systemd.services."serial-getty@".postStart = "";
+systemd.services."serial-getty@".notSocketActivated = false;
+systemd.services."serial-getty@".reload = "";
+systemd.services."serial-getty@".preStop = "";
+systemd.services.systemd-modules-load.name = "systemd-modules-load.service";
+systemd.services.systemd-modules-load.description = "";
-systemd.services.systemd-modules-load.path.".0" = «derivation /nix/store/00000000000000000000000000000000-coreutils-9.7.drv»;
-systemd.services.systemd-modules-load.path.".1" = «derivation /nix/store/00000000000000000000000000000000-findutils-4.10.0.drv»;
-systemd.services.systemd-modules-load.path.".2" = «derivation /nix/store/00000000000000000000000000000000-gnugrep-3.11.drv»;
-systemd.services.systemd-modules-load.path.".3" = «derivation /nix/store/00000000000000000000000000000000-gnused-4.9.drv»;
-systemd.services.systemd-modules-load.path.".4" = «derivation /nix/store/00000000000000000000000000000000-systemd-257.5.drv»;
+systemd.services.systemd-modules-load.enable = true;
+systemd.services.systemd-modules-load.environment.PATH = "/nix/store/00000000000000000000000000000000-coreutils-9.7/bin:/nix/store/00000000000000000000000000000000-findutils-4.10.0/bin:/nix/store/00000000000000000000000000000000-gnugrep-3.11/bin:/nix/store/00000000000000000000000000000000-gnused-4.9/bin:/nix/store/00000000000000000000000000000000-systemd-257.5/bin:/nix/store/00000000000000000000000000000000-coreutils-9.7/sbin:/nix/store/00000000000000000000000000000000-findutils-4.10.0/sbin:/nix/store/00000000000000000000000000000000-gnugrep-3.11/sbin:/nix/store/00000000000000000000000000000000-gnused-4.9/sbin:/nix/store/00000000000000000000000000000000-systemd-257.5/sbin";
+systemd.services.systemd-modules-load.wantedBy.".0" = "multi-user.target";
-systemd.services.systemd-modules-load.restartTriggers.".0" = «derivation /nix/store/00000000000000000000000000000000-nixos.conf.drv»;
+systemd.services.systemd-modules-load.reloadIfChanged = false;
+systemd.services.systemd-modules-load.serviceConfig.SuccessExitStatus = "0 1";
+systemd.services.systemd-modules-load.script = "";
+systemd.services.systemd-modules-load.unitConfig.X-Restart-Triggers = "/nix/store/00000000000000000000000000000000-X-Restart-Triggers-systemd-modules-load";
+systemd.services.systemd-modules-load.preStart = "";
+systemd.services.systemd-modules-load.restartIfChanged = true;
+systemd.services.systemd-modules-load.overrideStrategy = "asDropinIfExists";
+systemd.services.systemd-modules-load.stopIfChanged = true;
+systemd.services.systemd-modules-load.confinement.enable = false;
+systemd.services.systemd-modules-load.postStop = "";
+systemd.services.systemd-modules-load.postStart = "";
+systemd.services.systemd-modules-load.notSocketActivated = false;
+systemd.services.systemd-modules-load.reload = "";
+systemd.services.systemd-modules-load.preStop = "";
+systemd.services.systemd-timesyncd.name = "systemd-timesyncd.service";
+systemd.services.systemd-timesyncd.description = "";
-systemd.services.systemd-timesyncd.path.".0" = «derivation /nix/store/00000000000000000000000000000000-coreutils-9.7.drv»;
-systemd.services.systemd-timesyncd.path.".1" = «derivation /nix/store/00000000000000000000000000000000-findutils-4.10.0.drv»;
-systemd.services.systemd-timesyncd.path.".2" = «derivation /nix/store/00000000000000000000000000000000-gnugrep-3.11.drv»;
-systemd.services.systemd-timesyncd.path.".3" = «derivation /nix/store/00000000000000000000000000000000-gnused-4.9.drv»;
-systemd.services.systemd-timesyncd.path.".4" = «derivation /nix/store/00000000000000000000000000000000-systemd-257.5.drv»;
+systemd.services.systemd-timesyncd.enable = true;
+systemd.services.systemd-timesyncd.environment.PATH = "/nix/store/00000000000000000000000000000000-coreutils-9.7/bin:/nix/store/00000000000000000000000000000000-findutils-4.10.0/bin:/nix/store/00000000000000000000000000000000-gnugrep-3.11/bin:/nix/store/00000000000000000000000000000000-gnused-4.9/bin:/nix/store/00000000000000000000000000000000-systemd-257.5/bin:/nix/store/00000000000000000000000000000000-coreutils-9.7/sbin:/nix/store/00000000000000000000000000000000-findutils-4.10.0/sbin:/nix/store/00000000000000000000000000000000-gnugrep-3.11/sbin:/nix/store/00000000000000000000000000000000-gnused-4.9/sbin:/nix/store/00000000000000000000000000000000-systemd-257.5/sbin";
+systemd.services.systemd-timesyncd.environment.LD_LIBRARY_PATH = "/nix/store/00000000000000000000000000000000-systemd-257.5/lib";
+systemd.services.systemd-timesyncd.wantedBy.".0" = "sysinit.target";
-systemd.services.systemd-timesyncd.restartTriggers.".0" = «derivation /nix/store/00000000000000000000000000000000-etc-systemd-timesyncd.conf.drv»;
+systemd.services.systemd-timesyncd.reloadIfChanged = false;
+systemd.services.systemd-timesyncd.serviceConfig.ExecStartPre.".0" = "/nix/store/00000000000000000000000000000000-unit-script-systemd-timesyncd-pre-start/bin/systemd-timesyncd-pre-start";
+systemd.services.systemd-timesyncd.script = "";
+systemd.services.systemd-timesyncd.unitConfig.X-Restart-Triggers = "/nix/store/00000000000000000000000000000000-X-Restart-Triggers-systemd-timesyncd";
+systemd.services.systemd-timesyncd.preStart = ''
  if ! [ -f /var/lib/systemd/timesync/clock ]; then
    test -d /var/lib/systemd/timesync || mkdir -p /var/lib/systemd/timesync
    touch /var/lib/systemd/timesync/clock
  fi
  '';
+systemd.services.systemd-timesyncd.restartIfChanged = true;
+systemd.services.systemd-timesyncd.overrideStrategy = "asDropinIfExists";
+systemd.services.systemd-timesyncd.aliases.".0" = "dbus-org.freedesktop.timesync1.service";
+systemd.services.systemd-timesyncd.stopIfChanged = true;
+systemd.services.systemd-timesyncd.confinement.enable = false;
+systemd.services.systemd-timesyncd.postStop = "";
+systemd.services.systemd-timesyncd.postStart = "";
+systemd.services.systemd-timesyncd.notSocketActivated = false;
+systemd.services.systemd-timesyncd.enableStrictShellChecks = false;
+systemd.services.systemd-timesyncd.reload = "";
+systemd.services.systemd-timesyncd.preStop = "";
+systemd.services.systemd-udevd.name = "systemd-udevd.service";
+systemd.services.systemd-udevd.description = "";
-systemd.services.systemd-udevd.path.".0" = «derivation /nix/store/00000000000000000000000000000000-coreutils-9.7.drv»;
-systemd.services.systemd-udevd.path.".1" = «derivation /nix/store/00000000000000000000000000000000-findutils-4.10.0.drv»;
-systemd.services.systemd-udevd.path.".2" = «derivation /nix/store/00000000000000000000000000000000-gnugrep-3.11.drv»;
-systemd.services.systemd-udevd.path.".3" = «derivation /nix/store/00000000000000000000000000000000-gnused-4.9.drv»;
-systemd.services.systemd-udevd.path.".4" = «derivation /nix/store/00000000000000000000000000000000-systemd-257.5.drv»;
+systemd.services.systemd-udevd.enable = true;
+systemd.services.systemd-udevd.environment.PATH = "/nix/store/00000000000000000000000000000000-coreutils-9.7/bin:/nix/store/00000000000000000000000000000000-findutils-4.10.0/bin:/nix/store/00000000000000000000000000000000-gnugrep-3.11/bin:/nix/store/00000000000000000000000000000000-gnused-4.9/bin:/nix/store/00000000000000000000000000000000-systemd-257.5/bin:/nix/store/00000000000000000000000000000000-coreutils-9.7/sbin:/nix/store/00000000000000000000000000000000-findutils-4.10.0/sbin:/nix/store/00000000000000000000000000000000-gnugrep-3.11/sbin:/nix/store/00000000000000000000000000000000-gnused-4.9/sbin:/nix/store/00000000000000000000000000000000-systemd-257.5/sbin";
-systemd.services.systemd-udevd.restartTriggers.".0" = «derivation /nix/store/00000000000000000000000000000000-udev-rules.drv»;
+systemd.services.systemd-udevd.reloadIfChanged = false;
+systemd.services.systemd-udevd.script = "";
+systemd.services.systemd-udevd.unitConfig.X-Restart-Triggers = "/nix/store/00000000000000000000000000000000-X-Restart-Triggers-systemd-udevd";
+systemd.services.systemd-udevd.preStart = "";
+systemd.services.systemd-udevd.restartIfChanged = true;
+systemd.services.systemd-udevd.overrideStrategy = "asDropinIfExists";
+systemd.services.systemd-udevd.stopIfChanged = false;
+systemd.services.systemd-udevd.confinement.enable = false;
+systemd.services.systemd-udevd.postStop = "";
+systemd.services.systemd-udevd.postStart = "";
+systemd.services.systemd-udevd.notSocketActivated = true;
+systemd.services.systemd-udevd.reload = "";
+systemd.services.systemd-udevd.preStop = "";
+systemd.targets.post-resume.name = "post-resume.target";
+systemd.targets.post-resume.description = "Post-Resume Actions";
+systemd.targets.post-resume.enable = true;
+systemd.targets.post-resume.wantedBy.".0" = "sleep.target";
+systemd.targets.post-resume.unitConfig.StopWhenUnneeded = true;
+systemd.targets.post-resume.unitConfig.After = "post-resume.service";
+systemd.targets.post-resume.unitConfig.Requires = "post-resume.service";
+systemd.targets.post-resume.unitConfig.Description = "Post-Resume Actions";
+systemd.targets.post-resume.requires.".0" = "post-resume.service";
+systemd.targets.post-resume.after.".0" = "post-resume.service";
+systemd.targets.post-resume.overrideStrategy = "asDropinIfExists";
+systemd.units."autovt@.service".enable = true;
+systemd.units."autovt@.service".text = ''
  [Unit]
  
  [Service]
  Environment="LOCALE_ARCHIVE=/nix/store/00000000000000000000000000000000-glibc-locales-2.40-66/lib/locale/locale-archive"
  Environment="PATH=/nix/store/00000000000000000000000000000000-coreutils-9.7/bin:/nix/store/00000000000000000000000000000000-findutils-4.10.0/bin:/nix/store/00000000000000000000000000000000-gnugrep-3.11/bin:/nix/store/00000000000000000000000000000000-gnused-4.9/bin:/nix/store/00000000000000000000000000000000-systemd-257.5/bin:/nix/store/00000000000000000000000000000000-coreutils-9.7/sbin:/nix/store/00000000000000000000000000000000-findutils-4.10.0/sbin:/nix/store/00000000000000000000000000000000-gnugrep-3.11/sbin:/nix/store/00000000000000000000000000000000-gnused-4.9/sbin:/nix/store/00000000000000000000000000000000-systemd-257.5/sbin"
  Environment="TZDIR=/nix/store/00000000000000000000000000000000-tzdata-2025b/share/zoneinfo"
  X-RestartIfChanged=false
  ExecStart=
  ExecStart=/nix/store/00000000000000000000000000000000-util-linux-2.41-bin/bin/agetty --login-program /nix/store/00000000000000000000000000000000-shadow-4.17.4/bin/login --noclear %I $TERM
  '';
+systemd.units."autovt@.service".overrideStrategy = "asDropinIfExists";
-systemd.units."autovt@.service".unit = «derivation /nix/store/00000000000000000000000000000000-unit-autovt-.service.drv»;
+systemd.units."console-getty.service".enable = false;
+systemd.units."console-getty.service".overrideStrategy = "asDropinIfExists";
-systemd.units."console-getty.service".unit = «derivation /nix/store/00000000000000000000000000000000-unit-console-getty.service-disabled.drv»;
+systemd.units."container-getty@.service".enable = true;
+systemd.units."container-getty@.service".text = ''
  [Unit]
  
  [Service]
  Environment="LOCALE_ARCHIVE=/nix/store/00000000000000000000000000000000-glibc-locales-2.40-66/lib/locale/locale-archive"
  Environment="PATH=/nix/store/00000000000000000000000000000000-coreutils-9.7/bin:/nix/store/00000000000000000000000000000000-findutils-4.10.0/bin:/nix/store/00000000000000000000000000000000-gnugrep-3.11/bin:/nix/store/00000000000000000000000000000000-gnused-4.9/bin:/nix/store/00000000000000000000000000000000-systemd-257.5/bin:/nix/store/00000000000000000000000000000000-coreutils-9.7/sbin:/nix/store/00000000000000000000000000000000-findutils-4.10.0/sbin:/nix/store/00000000000000000000000000000000-gnugrep-3.11/sbin:/nix/store/00000000000000000000000000000000-gnused-4.9/sbin:/nix/store/00000000000000000000000000000000-systemd-257.5/sbin"
  Environment="TZDIR=/nix/store/00000000000000000000000000000000-tzdata-2025b/share/zoneinfo"
  X-RestartIfChanged=false
  ExecStart=
  ExecStart=/nix/store/00000000000000000000000000000000-util-linux-2.41-bin/bin/agetty --login-program /nix/store/00000000000000000000000000000000-shadow-4.17.4/bin/login --noclear --keep-baud pts/%I 115200,38400,9600 $TERM
  '';
+systemd.units."container-getty@.service".overrideStrategy = "asDropinIfExists";
-systemd.units."container-getty@.service".unit = «derivation /nix/store/00000000000000000000000000000000-unit-container-getty-.service.drv»;
+systemd.units."getty@.service".enable = true;
+systemd.units."getty@.service".text = ''
  [Unit]
  
  [Service]
  Environment="LOCALE_ARCHIVE=/nix/store/00000000000000000000000000000000-glibc-locales-2.40-66/lib/locale/locale-archive"
  Environment="PATH=/nix/store/00000000000000000000000000000000-coreutils-9.7/bin:/nix/store/00000000000000000000000000000000-findutils-4.10.0/bin:/nix/store/00000000000000000000000000000000-gnugrep-3.11/bin:/nix/store/00000000000000000000000000000000-gnused-4.9/bin:/nix/store/00000000000000000000000000000000-systemd-257.5/bin:/nix/store/00000000000000000000000000000000-coreutils-9.7/sbin:/nix/store/00000000000000000000000000000000-findutils-4.10.0/sbin:/nix/store/00000000000000000000000000000000-gnugrep-3.11/sbin:/nix/store/00000000000000000000000000000000-gnused-4.9/sbin:/nix/store/00000000000000000000000000000000-systemd-257.5/sbin"
  Environment="TTY=%I"
  Environment="TZDIR=/nix/store/00000000000000000000000000000000-tzdata-2025b/share/zoneinfo"
  X-RestartIfChanged=false
  ExecStart=
  ExecStart=/nix/store/00000000000000000000000000000000-getty
  '';
+systemd.units."getty@.service".overrideStrategy = "asDropinIfExists";
-systemd.units."getty@.service".unit = «derivation /nix/store/00000000000000000000000000000000-unit-getty-.service.drv»;
+systemd.units."post-resume.service".enable = true;
+systemd.units."post-resume.service".text = ''
  [Unit]
  After=suspend.target hibernate.target hybrid-sleep.target suspend-then-hibernate.target
  Description=Post-Resume Actions
  
  [Service]
  Environment="LOCALE_ARCHIVE=/nix/store/00000000000000000000000000000000-glibc-locales-2.40-66/lib/locale/locale-archive"
  Environment="PATH=/nix/store/00000000000000000000000000000000-coreutils-9.7/bin:/nix/store/00000000000000000000000000000000-findutils-4.10.0/bin:/nix/store/00000000000000000000000000000000-gnugrep-3.11/bin:/nix/store/00000000000000000000000000000000-gnused-4.9/bin:/nix/store/00000000000000000000000000000000-systemd-257.5/bin:/nix/store/00000000000000000000000000000000-coreutils-9.7/sbin:/nix/store/00000000000000000000000000000000-findutils-4.10.0/sbin:/nix/store/00000000000000000000000000000000-gnugrep-3.11/sbin:/nix/store/00000000000000000000000000000000-gnused-4.9/sbin:/nix/store/00000000000000000000000000000000-systemd-257.5/sbin"
  Environment="TZDIR=/nix/store/00000000000000000000000000000000-tzdata-2025b/share/zoneinfo"
  ExecStart=/nix/store/00000000000000000000000000000000-unit-script-post-resume-start/bin/post-resume-start 
  Type=oneshot
  '';
+systemd.units."post-resume.service".overrideStrategy = "asDropinIfExists";
-systemd.units."post-resume.service".unit = «derivation /nix/store/00000000000000000000000000000000-unit-post-resume.service.drv»;
+systemd.units."post-resume.target".enable = true;
+systemd.units."post-resume.target".text = ''
  [Unit]
  After=post-resume.service
  Description=Post-Resume Actions
  Requires=post-resume.service
  StopWhenUnneeded=true
  
  '';
+systemd.units."post-resume.target".wantedBy.".0" = "sleep.target";
+systemd.units."post-resume.target".overrideStrategy = "asDropinIfExists";
-systemd.units."post-resume.target".unit = «derivation /nix/store/00000000000000000000000000000000-unit-post-resume.target.drv»;
+systemd.units."pre-sleep.service".enable = true;
+systemd.units."pre-sleep.service".text = ''
  [Unit]
  Before=sleep.target
  Description=Pre-Sleep Actions
  
  [Service]
  Environment="LOCALE_ARCHIVE=/nix/store/00000000000000000000000000000000-glibc-locales-2.40-66/lib/locale/locale-archive"
  Environment="PATH=/nix/store/00000000000000000000000000000000-coreutils-9.7/bin:/nix/store/00000000000000000000000000000000-findutils-4.10.0/bin:/nix/store/00000000000000000000000000000000-gnugrep-3.11/bin:/nix/store/00000000000000000000000000000000-gnused-4.9/bin:/nix/store/00000000000000000000000000000000-systemd-257.5/bin:/nix/store/00000000000000000000000000000000-coreutils-9.7/sbin:/nix/store/00000000000000000000000000000000-findutils-4.10.0/sbin:/nix/store/00000000000000000000000000000000-gnugrep-3.11/sbin:/nix/store/00000000000000000000000000000000-gnused-4.9/sbin:/nix/store/00000000000000000000000000000000-systemd-257.5/sbin"
  Environment="TZDIR=/nix/store/00000000000000000000000000000000-tzdata-2025b/share/zoneinfo"
  ExecStart=/nix/store/00000000000000000000000000000000-unit-script-pre-sleep-start/bin/pre-sleep-start 
  Type=oneshot
  
  [Install]
  WantedBy=sleep.target
  '';
+systemd.units."pre-sleep.service".wantedBy.".0" = "sleep.target";
+systemd.units."pre-sleep.service".overrideStrategy = "asDropinIfExists";
-systemd.units."pre-sleep.service".unit = «derivation /nix/store/00000000000000000000000000000000-unit-pre-sleep.service.drv»;
+systemd.units."reload-systemd-vconsole-setup.service".enable = true;
+systemd.units."reload-systemd-vconsole-setup.service".text = ''
  [Unit]
  Description=Reset console on configuration changes
  X-Restart-Triggers=/nix/store/00000000000000000000000000000000-X-Restart-Triggers-reload-systemd-vconsole-setup
  
  [Service]
  Environment="LOCALE_ARCHIVE=/nix/store/00000000000000000000000000000000-glibc-locales-2.40-66/lib/locale/locale-archive"
  Environment="PATH=/nix/store/00000000000000000000000000000000-coreutils-9.7/bin:/nix/store/00000000000000000000000000000000-findutils-4.10.0/bin:/nix/store/00000000000000000000000000000000-gnugrep-3.11/bin:/nix/store/00000000000000000000000000000000-gnused-4.9/bin:/nix/store/00000000000000000000000000000000-systemd-257.5/bin:/nix/store/00000000000000000000000000000000-coreutils-9.7/sbin:/nix/store/00000000000000000000000000000000-findutils-4.10.0/sbin:/nix/store/00000000000000000000000000000000-gnugrep-3.11/sbin:/nix/store/00000000000000000000000000000000-gnused-4.9/sbin:/nix/store/00000000000000000000000000000000-systemd-257.5/sbin"
  Environment="TZDIR=/nix/store/00000000000000000000000000000000-tzdata-2025b/share/zoneinfo"
  X-ReloadIfChanged=true
  ExecReload=/run/current-system/systemd/bin/systemctl restart systemd-vconsole-setup
  ExecStart=/nix/store/00000000000000000000000000000000-coreutils-9.7/bin/true
  RemainAfterExit=true
  
  [Install]
  WantedBy=multi-user.target
  '';
+systemd.units."reload-systemd-vconsole-setup.service".wantedBy.".0" = "multi-user.target";
+systemd.units."reload-systemd-vconsole-setup.service".overrideStrategy = "asDropinIfExists";
-systemd.units."reload-systemd-vconsole-setup.service".unit = «derivation /nix/store/00000000000000000000000000000000-unit-reload-systemd-vconsole-setup.service.drv»;
+systemd.units."serial-getty@.service".enable = true;
+systemd.units."serial-getty@.service".text = ''
  [Unit]
  
  [Service]
  Environment="LOCALE_ARCHIVE=/nix/store/00000000000000000000000000000000-glibc-locales-2.40-66/lib/locale/locale-archive"
  Environment="PATH=/nix/store/00000000000000000000000000000000-coreutils-9.7/bin:/nix/store/00000000000000000000000000000000-findutils-4.10.0/bin:/nix/store/00000000000000000000000000000000-gnugrep-3.11/bin:/nix/store/00000000000000000000000000000000-gnused-4.9/bin:/nix/store/00000000000000000000000000000000-systemd-257.5/bin:/nix/store/00000000000000000000000000000000-coreutils-9.7/sbin:/nix/store/00000000000000000000000000000000-findutils-4.10.0/sbin:/nix/store/00000000000000000000000000000000-gnugrep-3.11/sbin:/nix/store/00000000000000000000000000000000-gnused-4.9/sbin:/nix/store/00000000000000000000000000000000-systemd-257.5/sbin"
  Environment="TZDIR=/nix/store/00000000000000000000000000000000-tzdata-2025b/share/zoneinfo"
  X-RestartIfChanged=false
  ExecStart=
  ExecStart=/nix/store/00000000000000000000000000000000-util-linux-2.41-bin/bin/agetty --login-program /nix/store/00000000000000000000000000000000-shadow-4.17.4/bin/login %I --keep-baud $TERM
  '';
+systemd.units."serial-getty@.service".overrideStrategy = "asDropinIfExists";
-systemd.units."serial-getty@.service".unit = «derivation /nix/store/00000000000000000000000000000000-unit-serial-getty-.service.drv»;
+systemd.units."systemd-modules-load.service".enable = true;
+systemd.units."systemd-modules-load.service".text = ''
  [Unit]
  X-Restart-Triggers=/nix/store/00000000000000000000000000000000-X-Restart-Triggers-systemd-modules-load
  
  [Service]
  Environment="LOCALE_ARCHIVE=/nix/store/00000000000000000000000000000000-glibc-locales-2.40-66/lib/locale/locale-archive"
  Environment="PATH=/nix/store/00000000000000000000000000000000-coreutils-9.7/bin:/nix/store/00000000000000000000000000000000-findutils-4.10.0/bin:/nix/store/00000000000000000000000000000000-gnugrep-3.11/bin:/nix/store/00000000000000000000000000000000-gnused-4.9/bin:/nix/store/00000000000000000000000000000000-systemd-257.5/bin:/nix/store/00000000000000000000000000000000-coreutils-9.7/sbin:/nix/store/00000000000000000000000000000000-findutils-4.10.0/sbin:/nix/store/00000000000000000000000000000000-gnugrep-3.11/sbin:/nix/store/00000000000000000000000000000000-gnused-4.9/sbin:/nix/store/00000000000000000000000000000000-systemd-257.5/sbin"
  Environment="TZDIR=/nix/store/00000000000000000000000000000000-tzdata-2025b/share/zoneinfo"
  SuccessExitStatus=0 1
  
  [Install]
  WantedBy=multi-user.target
  '';
+systemd.units."systemd-modules-load.service".wantedBy.".0" = "multi-user.target";
+systemd.units."systemd-modules-load.service".overrideStrategy = "asDropinIfExists";
-systemd.units."systemd-modules-load.service".unit = «derivation /nix/store/00000000000000000000000000000000-unit-systemd-modules-load.service.drv»;
+systemd.units."systemd-timesyncd.service".enable = true;
+systemd.units."systemd-timesyncd.service".text = ''
  [Unit]
  X-Restart-Triggers=/nix/store/00000000000000000000000000000000-X-Restart-Triggers-systemd-timesyncd
  
  [Service]
  Environment="LD_LIBRARY_PATH=/nix/store/00000000000000000000000000000000-systemd-257.5/lib"
  Environment="LOCALE_ARCHIVE=/nix/store/00000000000000000000000000000000-glibc-locales-2.40-66/lib/locale/locale-archive"
  Environment="PATH=/nix/store/00000000000000000000000000000000-coreutils-9.7/bin:/nix/store/00000000000000000000000000000000-findutils-4.10.0/bin:/nix/store/00000000000000000000000000000000-gnugrep-3.11/bin:/nix/store/00000000000000000000000000000000-gnused-4.9/bin:/nix/store/00000000000000000000000000000000-systemd-257.5/bin:/nix/store/00000000000000000000000000000000-coreutils-9.7/sbin:/nix/store/00000000000000000000000000000000-findutils-4.10.0/sbin:/nix/store/00000000000000000000000000000000-gnugrep-3.11/sbin:/nix/store/00000000000000000000000000000000-gnused-4.9/sbin:/nix/store/00000000000000000000000000000000-systemd-257.5/sbin"
  Environment="TZDIR=/nix/store/00000000000000000000000000000000-tzdata-2025b/share/zoneinfo"
  ExecStartPre=/nix/store/00000000000000000000000000000000-unit-script-systemd-timesyncd-pre-start/bin/systemd-timesyncd-pre-start
  
  [Install]
  WantedBy=sysinit.target
  '';
+systemd.units."systemd-timesyncd.service".wantedBy.".0" = "sysinit.target";
+systemd.units."systemd-timesyncd.service".overrideStrategy = "asDropinIfExists";
-systemd.units."systemd-timesyncd.service".unit = «derivation /nix/store/00000000000000000000000000000000-unit-systemd-timesyncd.service.drv»;
+systemd.units."systemd-timesyncd.service".aliases.".0" = "dbus-org.freedesktop.timesync1.service";
+systemd.units."systemd-udevd.service".enable = true;
+systemd.units."systemd-udevd.service".text = ''
  [Unit]
  X-Restart-Triggers=/nix/store/00000000000000000000000000000000-X-Restart-Triggers-systemd-udevd
  
  [Service]
  Environment="LOCALE_ARCHIVE=/nix/store/00000000000000000000000000000000-glibc-locales-2.40-66/lib/locale/locale-archive"
  Environment="PATH=/nix/store/00000000000000000000000000000000-coreutils-9.7/bin:/nix/store/00000000000000000000000000000000-findutils-4.10.0/bin:/nix/store/00000000000000000000000000000000-gnugrep-3.11/bin:/nix/store/00000000000000000000000000000000-gnused-4.9/bin:/nix/store/00000000000000000000000000000000-systemd-257.5/bin:/nix/store/00000000000000000000000000000000-coreutils-9.7/sbin:/nix/store/00000000000000000000000000000000-findutils-4.10.0/sbin:/nix/store/00000000000000000000000000000000-gnugrep-3.11/sbin:/nix/store/00000000000000000000000000000000-gnused-4.9/sbin:/nix/store/00000000000000000000000000000000-systemd-257.5/sbin"
  Environment="TZDIR=/nix/store/00000000000000000000000000000000-tzdata-2025b/share/zoneinfo"
  X-StopIfChanged=false
  X-NotSocketActivated=true
  '';
+systemd.units."systemd-udevd.service".overrideStrategy = "asDropinIfExists";
-systemd.units."systemd-udevd.service".unit = «derivation /nix/store/00000000000000000000000000000000-unit-systemd-udevd.service.drv»;
+users.groups.systemd-timesync.name = "systemd-timesync";
+users.groups.systemd-timesync.gid = 154;
+users.users.systemd-timesync.name = "systemd-timesync";
+users.users.systemd-timesync.description = "";
+users.users.systemd-timesync.enable = true;
+users.users.systemd-timesync.passwordFile = null;
+users.users.systemd-timesync.group = "systemd-timesync";
+users.users.systemd-timesync.uid = 154;
+users.users.systemd-timesync.isSystemUser = false;
+users.users.systemd-timesync.isNormalUser = false;
+users.users.systemd-timesync.home = "/var/empty";
+users.users.systemd-timesync.homeMode = "700";
-users.users.systemd-timesync.shell = «derivation /nix/store/00000000000000000000000000000000-shadow-4.17.4.drv»;
+users.users.systemd-timesync.ignoreShellProgramCheck = false;
+users.users.systemd-timesync.autoSubUidGidRange = false;
+users.users.systemd-timesync.createHome = false;
+users.users.systemd-timesync.useDefaultShell = false;
+users.users.systemd-timesync.hashedPassword = null;
+users.users.systemd-timesync.password = null;
+users.users.systemd-timesync.hashedPasswordFile = null;
+users.users.systemd-timesync.initialHashedPassword = null;
+users.users.systemd-timesync.initialPassword = null;
+users.users.systemd-timesync.expires = null;
+users.users.systemd-timesync.linger = false;
